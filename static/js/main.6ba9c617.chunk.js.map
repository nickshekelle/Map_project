{"version":3,"sources":["map1_component.js","map2_component.js","map3_component.js","App.js","serviceWorker.js","index.js"],"names":["COLOR_SCALE","scaleThreshold","domain","range","INITIAL_VIEW_STATE","width","window","innerWidth","height","innerHeight","longitude","latitude","zoom","maxZoom","bearing","pitch","Map1","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_onHover","_ref","x","y","object","setState","hoveredObject","_renderTooltip","_this$state","state","react_default","a","createElement","className","style","top","left","opacity","Math","round","properties","BlackRF2010and2011","renderLegend","legend","document","layers","i","length","layer","color","item","key","backgroundColor","value","innerHTML","appendChild","_this$props$data","data","GeoJsonLayer","id","stroked","filled","extruded","wireframe","fp64","getElevation","f","sqrt","getFillColor","getLineColor","pickable","onHover","_this$props$mapStyle","mapStyle","deckgl","_renderLayers","initialViewState","controller","esm","reuseMaps","preventStyleDiffing","mapboxApiAccessToken","Component","Map2","Map3","All_Cancer","Breast_Can","Colorectal","Lung_Bronc","Prostate_C","Urinary_Sy","App","view","back_to_home","bind","assertThisInitialized","change_to_map1","change_to_map2","change_to_map3","navigator","Navbar_default","bg","variant","expand","fixed","Brand","onClick","Toggle","aria-controls","Collapse","Nav_default","Link","NavDropdown_default","title","Item","mdbreact_esm","type","delay","map1_component_Map1","map2_component_Map2","map3_component_Map3","Boolean","location","hostname","match","ReactDOM","render","App_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ba9c617.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { StaticMap } from 'react-map-gl';\nimport DeckGL, { GeoJsonLayer } from 'deck.gl';\nimport { scaleThreshold } from 'd3-scale';\n\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN = \"pk.eyJ1Ijoibmlja3NoZWtlbGxlIiwiYSI6ImNqeW90aWhrODE4Y20zbXA3eGNkZ2JsankifQ.ge-O4WjAvMnMBBo8rBpScw\"; // eslint-disable-line\n\n// Source data GeoJSON\nconst DATA_URL =\n  'https://raw.githubusercontent.com/nickshekelle/Map_project/master/Black_Rockfish_Mean_Density__North_Central_Coast__201011__PISCO_%5Bds1358%5D.geojson'; // eslint-disable-line\n\nexport const COLOR_SCALE = scaleThreshold()\n  .domain([0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48])\n  .range([\n    [65, 182, 196],\n    [127, 205, 187],\n    [199, 233, 180],\n    [237, 248, 177],\n    [255, 255, 204],\n    [255, 237, 160],\n    [254, 217, 118],\n    [254, 178, 76],\n    [253, 141, 60],\n    [252, 78, 42],\n    [227, 26, 28],\n    [189, 0, 38],\n    [128, 0, 38]\n  ]);\n\nconst INITIAL_VIEW_STATE = {\n  width: window.innerWidth,\n  height: window.innerHeight,\n  longitude: -123.626,\n  latitude: 38.825,\n  zoom: 8.5,\n  maxZoom: 16,\n  bearing: 10,\n  pitch: 60\n};\n\nexport default class Map1 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hoveredObject: null\n    };\n  }\n\n  _onHover = ({ x, y, object }) => {\n    this.setState({ x, y, hoveredObject: object });\n  }\n\n  _renderLayers() {\n    const { data = DATA_URL } = this.props;\n\n    return [\n      new GeoJsonLayer({\n        id: 'geojson',\n        data,\n        opacity: 0.8,\n        stroked: false,\n        filled: true,\n        extruded: true,\n        wireframe: true,\n        fp64: true,\n        getElevation: f => Math.sqrt(f.properties.BlackRF2010and2011) * 1000,\n        getFillColor: f => COLOR_SCALE(f.properties.BlackRF2010and2011 * 10),\n        getLineColor: [255, 255, 255],\n        pickable: true,\n        onHover: this._onHover\n      })\n    ];\n  }\n\n  _renderTooltip = () => {\n    const { x, y, hoveredObject } = this.state;\n    return (\n      hoveredObject && (\n        <div className=\"tooltip\" style={{ top: y, left: x, opacity: 1 }}>\n          <div>\n            <b>China Rockfish Density</b>\n          </div>\n          <div>\n            <div>{Math.round(hoveredObject.properties.BlackRF2010and2011 * 10000) / 1000} / 100m<sup>2</sup></div>\n          </div>\n        </div>\n      )\n    );\n  }\n\n  renderLegend = () => {\n    var legend = document.createElement('legend')\n    var layers = [\"0-4\", \"4-8\", \"8-12\", \"12-16\", \"16-20\", \"20-24\", \"24-28\", \"28-32\", \"32-36\", \"36-40\", \"40-44\", \"44-48\", \"48+\"]\n    for (var i = 0; i < layers.length; i++) {\n      var layer = layers[i];\n      var color = COLOR_SCALE.range[i];\n      var item = document.createElement('div');\n      var key = document.createElement('span');\n      key.className = 'legend-key';\n      key.style.backgroundColor = color;\n\n      var value = document.createElement('span');\n      value.innerHTML = layer;\n      item.appendChild(key);\n      item.appendChild(value);\n      legend.appendChild(item);\n      return (\n        <h1>\n          <li>{layers}</li>\n        </h1>\n      );\n    }\n\n  }\n\n  render() {\n    const { mapStyle = 'mapbox://styles/nickshekelle/cjz4qge2k07wx1cpg1jsri6we' } = this.props;\n\n    return (\n      <DeckGL layers={this._renderLayers()} initialViewState={INITIAL_VIEW_STATE} controller={true}>\n        <StaticMap\n          reuseMaps\n          mapStyle={mapStyle}\n          preventStyleDiffing={true}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n        />\n        {this._renderTooltip}\n        {this.renderLegend}\n      </DeckGL>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { StaticMap } from 'react-map-gl';\nimport DeckGL, { GeoJsonLayer } from 'deck.gl';\nimport { scaleThreshold } from 'd3-scale';\n\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN = \"pk.eyJ1Ijoibmlja3NoZWtlbGxlIiwiYSI6ImNqeW90aWhrODE4Y20zbXA3eGNkZ2JsankifQ.ge-O4WjAvMnMBBo8rBpScw\"; // eslint-disable-line\n\n// Source data GeoJSON\nconst DATA_URL =\n    'https://raw.githubusercontent.com/nickshekelle/Map_project/master/Black_Rockfish_Mean_Density__North_Central_Coast__201011__PISCO_%5Bds1358%5D.geojson'; // eslint-disable-line\n\nexport const COLOR_SCALE = scaleThreshold()\n    .domain([-0.6, -0.45, -0.3, -0.15, 0, 0.15, 0.3, 0.45, 0.6, 0.75, 0.9, 1.05, 1.2])\n    .range([\n        [65, 182, 196],\n        [127, 205, 187],\n        [199, 233, 180],\n        [237, 248, 177],\n        // zero\n        [255, 255, 204],\n        [255, 237, 160],\n        [254, 217, 118],\n        [254, 178, 76],\n        [253, 141, 60],\n        [252, 78, 42],\n        [227, 26, 28],\n        [189, 0, 38],\n        [128, 0, 38]\n    ]);\n\nconst INITIAL_VIEW_STATE = {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    longitude: -123.626,\n    latitude: 38.825,\n    zoom: 8.5,\n    maxZoom: 16,\n    bearing: 10,\n    pitch: 60\n};\n\nexport default class Map2 extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hoveredObject: null\n        };\n    }\n\n    _onHover = ({ x, y, object }) => {\n        this.setState({ x, y, hoveredObject: object });\n    }\n\n    _renderLayers() {\n        const { data = DATA_URL } = this.props;\n\n        return [\n            new GeoJsonLayer({\n                id: 'geojson',\n                data,\n                opacity: 0.8,\n                stroked: false,\n                filled: true,\n                extruded: true,\n                wireframe: true,\n                fp64: true,\n                getElevation: f => Math.sqrt(f.properties.BlackRF2010and2011) * 1000,\n                getFillColor: f => COLOR_SCALE(f.properties.BlackRF2010and2011 * 1.0 / 4),\n                getLineColor: [255, 255, 255],\n                pickable: true,\n                onHover: this._onHover\n            })\n        ];\n    }\n\n    _renderTooltip = () => {\n        const { x, y, hoveredObject } = this.state;\n        return (\n            hoveredObject && (\n                <div className=\"tooltip\" style={{ top: y, left: x, opacity: 1 }}>\n                    <div>\n                        <b>China Rockfish Density</b>\n                    </div>\n                    <div>\n                        <div>{Math.round(hoveredObject.properties.BlackRF2010and2011 * 10000) / 1000} / 100m<sup>2</sup></div>\n                    </div>\n                </div>\n            )\n        );\n    }\n\n    render() {\n        const { mapStyle = 'mapbox://styles/nickshekelle/cjyrg5pcc26c11cjvbejtc79l' } = this.props;\n\n        return (\n            <DeckGL layers={this._renderLayers()} initialViewState={INITIAL_VIEW_STATE} controller={true}>\n                <StaticMap\n                    reuseMaps\n                    mapStyle={mapStyle}\n                    preventStyleDiffing={true}\n                    mapboxApiAccessToken={MAPBOX_TOKEN}\n                />\n                {this._renderTooltip}\n            </DeckGL>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { StaticMap } from 'react-map-gl';\nimport DeckGL, { GeoJsonLayer } from 'deck.gl';\nimport { scaleThreshold } from 'd3-scale';\n\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN = \"pk.eyJ1Ijoibmlja3NoZWtlbGxlIiwiYSI6ImNqeW90aWhrODE4Y20zbXA3eGNkZ2JsankifQ.ge-O4WjAvMnMBBo8rBpScw\";\n\n// Source data GeoJSON\nconst DATA_URL =\n    'https://raw.githubusercontent.com/nickshekelle/Map_project/master/Cancer_Rates.geojson';\n\nexport const COLOR_SCALE = scaleThreshold()\n    .domain([0, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000, 5500, 6000])\n    .range([\n        [65, 182, 196],\n        [127, 205, 187],\n        [199, 233, 180],\n        [237, 248, 177],\n        [255, 255, 204],\n        [255, 237, 160],\n        [254, 217, 118],\n        [254, 178, 76],\n        [253, 141, 60],\n        [252, 78, 42],\n        [227, 26, 28],\n        [189, 0, 38],\n        [128, 0, 38]\n    ]);\n\nconst INITIAL_VIEW_STATE = {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    longitude: -87.900,\n    latitude: 42.279,\n    zoom: 9.6,\n    maxZoom: 16,\n    bearing: 5,\n    pitch: 60\n};\n\nexport default class Map3 extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hoveredObject: null\n        };\n    }\n\n    _onHover = ({ x, y, object }) => {\n        this.setState({ x, y, hoveredObject: object });\n    }\n\n    _renderLayers() {\n        const { data = DATA_URL } = this.props;\n\n        return [\n            new GeoJsonLayer({\n                id: 'geojson',\n                data,\n                opacity: 0.8,\n                stroked: false,\n                filled: true,\n                extruded: true,\n                wireframe: true,\n                fp64: true,\n                getElevation: f => f.properties.All_Cancer,\n                getFillColor: f => COLOR_SCALE(f.properties.All_Cancer),\n                getLineColor: [255, 255, 255],\n                pickable: true,\n                onHover: this._onHover\n            })\n        ];\n    }\n\n    _renderTooltip = () => {\n        const { x, y, hoveredObject } = this.state;\n        return (\n            hoveredObject && (\n                <div className=\"tooltip\" style={{ top: y, left: x, opacity: 1 }}>\n                    <div>\n                        <b>Cancer Rates</b>\n                    </div>\n                    <div>\n                        <div>All Cancer: {Math.round(hoveredObject.properties.All_Cancer)} per 100,000 persons</div>\n                        <div>Breast Cancer: {Math.round(hoveredObject.properties.Breast_Can)} per 100,000 persons</div>\n                        <div>Colorectal Cancer: {Math.round(hoveredObject.properties.Colorectal)} per 100,000 persons</div>\n                        <div>Lung Cancer: {Math.round(hoveredObject.properties.Lung_Bronc)} per 100,000 persons</div>\n                        <div>Prostate Cancer: {Math.round(hoveredObject.properties.Prostate_C)} per 100,000 persons</div>\n                        <div>Urinary Cancer: {Math.round(hoveredObject.properties.Urinary_Sy)} per 100,000 persons</div>\n                    </div>\n                </div>\n            )\n        );\n    }\n\n    render() {\n        const { mapStyle = 'mapbox://styles/nickshekelle/cjyrg5pcc26c11cjvbejtc79l' } = this.props;\n\n        return (\n            <DeckGL layers={this._renderLayers()} initialViewState={INITIAL_VIEW_STATE} controller={true}>\n                <StaticMap\n                    reuseMaps\n                    mapStyle={mapStyle}\n                    preventStyleDiffing={true}\n                    mapboxApiAccessToken={MAPBOX_TOKEN}\n                />\n                {this._renderTooltip}\n            </DeckGL>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './App.css';\nimport Map1 from \"./map1_component.js\"\nimport Map2 from \"./map2_component.js\"\nimport Map3 from \"./map3_component.js\"\nimport Navbar from 'react-bootstrap/Navbar'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Nav from 'react-bootstrap/Nav'\nimport {\n  MDBMask,\n  MDBRow,\n  MDBBtn,\n  MDBView,\n  MDBContainer,\n  MDBAnimation\n} from \"mdbreact\";\nimport \"./index.css\";\n\n\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { view: 'home' };\n\n    this.back_to_home = this.back_to_home.bind(this)\n    this.change_to_map1 = this.change_to_map1.bind(this);\n    this.change_to_map2 = this.change_to_map2.bind(this);\n    this.change_to_map3 = this.change_to_map3.bind(this);\n  }\n\n  back_to_home() {\n    this.setState({ view: 'home' });\n  }\n\n  change_to_map1() {\n    this.setState({ view: 'map1' });\n  }\n\n  change_to_map2() {\n    this.setState({ view: 'map2' });\n  }\n\n  change_to_map3() {\n    this.setState({ view: 'map3' });\n  }\n\n\n  render() {\n\n    const navigator = (<Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n      <Navbar.Brand onClick={this.back_to_home}>MapRange</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link onClick={this.back_to_home}>Home</Nav.Link>\n          <NavDropdown title=\"Select Map\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item onClick={this.change_to_map1}>Rockfish Densities</NavDropdown.Item>\n            <NavDropdown.Item onClick={this.change_to_map3}>Cancer Rates</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>);\n\n    if (this.state.view === 'home') {\n      return (\n        <div id=\"apppage\">\n          <MDBView>\n            <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\n              <MDBContainer>\n                <MDBRow>\n                  <MDBAnimation type=\"fadeInLeft\" delay=\".3s\">\n                    <h1 className=\"h1-responsive font-weight-bold mt-sm-5\">\n                      Welcome to MapRange\n                    </h1>\n                    <hr className=\"hr-light\" />\n                    <h6 className=\"mb-4\">\n                      An example in data visualization for the average person.\n                    </h6>\n                    <MDBBtn color=\"white\" onClick={this.change_to_map1}>Get Started</MDBBtn>\n                  </MDBAnimation>\n                </MDBRow>\n              </MDBContainer>\n            </MDBMask>\n          </MDBView>\n        </div>\n      );\n    }\n    else if (this.state.view === 'map1') {\n      return (\n        <div>\n          {navigator}\n          <Map1></Map1>\n        </div>\n      );\n    }\n    else if (this.state.view === \"map2\") {\n      return (\n        <div>\n          {navigator}\n          <Map2></Map2>\n        </div>\n      );\n    } else if (this.state.view === \"map3\") {\n      return (\n        <div>\n          {navigator}\n          <Map3></Map3>\n        </div>\n      );\n    }\n  }\n\n}\n\nexport function renderToDOM(container) {\n  render(<div />, container);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}